/* Basic Reset and Body Styling */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    background-color: #eef1f5; /* Light grey background for a modern feel */
    color: #333;
    display: flex;
    flex-direction: column;
    height: 100vh; /* Strictly set body height to full viewport height */
    overflow: hidden; /* Prevent scrolling on the body */
}

/* Dashboard Header Styling */
.dashboard-header {
    background-color: #2c3e50; /* Dark blue-grey header */
    color: #ecf0f1; /* Light text color */
    padding: 15px 30px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    flex-shrink: 0; /* Prevent header from shrinking or growing */
    position: relative; /* Optional: for z-index if needed, though not currently */
    z-index: 10; /* Ensure header stays above content if any overlap issues (unlikely here) */
}

.dashboard-header h1 {
    margin: 0;
    font-size: 1.8em;
    font-weight: 600;
}

/* Dashboard Container: CSS Grid for 2x2 Layout (Quarters) */
.dashboard-container {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two equal-width columns */
    grid-template-rows: 1fr 1fr;    /* Two equal-height rows */
    gap: 20px; /* Slightly reduced gap for more content space */
    padding: 20px; /* Slightly reduced padding */
    flex-grow: 1; /* Allow this container to take up remaining vertical space */
    box-sizing: border-box;
    min-height: 0; /* Crucial for flex children that might otherwise overflow */
    overflow: hidden; /* Ensure the container itself doesn't scroll */
}

/* Individual Dashboard Pane Styling */
.dashboard-pane {
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    padding: 15px; /* Slightly reduced padding */
    display: flex;
    flex-direction: column;
    overflow: hidden; /* This is key: content inside pane will be clipped or should be scrollable internally if needed */
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.dashboard-pane:hover {
    transform: translateY(-3px); /* Subtle hover effect */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

/* Pane Header for Title and Filters */
.pane-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px; /* Reduced margin */
    flex-shrink: 0; /* Prevent pane header from shrinking */
}

.pane-title {
    margin-top: 0;
    margin-bottom: 0;
    font-size: 1.2em; /* Slightly adjusted font size */
    color: #34495e;
    font-weight: 500;
    text-align: left;
}

.filter-container {
    display: flex;
    align-items: center;
}

.filter-container label {
    margin-right: 8px;
    font-size: 0.9em;
    color: #555;
}

.filter-container select {
    padding: 5px 8px;
    border-radius: 4px;
    border: 1px solid #ccc;
    background-color: #fff;
    font-size: 0.9em;
}


/* Chart Container Styling (where SVGs will go) */
.chart-container {
    flex-grow: 1; /* Allow chart container to take up available space in pane */
    width: 100%;
    display: flex; /* Using flex to help center SVG if it's smaller */
    align-items: center;
    justify-content: center;
    min-height: 0; /* Essential for flex children to shrink correctly and not overflow parent */
    overflow: hidden; /* Ensure chart container itself doesn't cause scroll; SVG should fit */
}

.chart-container svg {
    width: 100%;
    height: 100%;
    max-width: 100%; /* Ensure SVG doesn't exceed container width */
    max-height: 100%; /* Ensure SVG doesn't exceed container height */
    display: block; /* Removes extra space below inline SVGs */
}

/* D3.js specific styles */
.axis path,
.axis line {
    fill: none;
    stroke: #888;
    shape-rendering: crispEdges;
}

.axis text {
    font-size: 0.75em;
    fill: #555;
}

.grid-line {
    stroke: #e0e0e0;
    stroke-dasharray: 2,2;
    shape-rendering: crispEdges;
}

.d3-tooltip {
    position: absolute;
    text-align: center;
    padding: 8px;
    font: 12px sans-serif;
    background: lightsteelblue;
    border: 0px;
    border-radius: 8px;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.2s;
    z-index: 100; /* Ensure tooltip is above other elements */
}

/* d3 parallel coordinates specific styles */
/* Add these styles to style.css */

/* Add these styles to style.css */

/* Styles for draggable parallel coordinates */
.dimension {
    cursor: grab;
    transition: opacity 0.3s;
}

.dimension:hover .axis path {
    stroke: #3498db;
    stroke-width: 1.5px;
}

.dimension.active {
    cursor: grabbing;
}

.dimension.active .axis path {
    stroke: #e74c3c;
    stroke-width: 2px;
}

.dimension.active text {
    font-weight: bold;
}

/* Enhanced path styling for parallel coordinates */
.foreground path {
    fill: none;
    stroke: #3498db;
    stroke-width: 1.2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    mix-blend-mode: multiply; /* enables color blending when lines overlap */
    opacity: 0.15; /* low opacity for better alpha blending */
    transition: opacity 0.3s, stroke-width 0.2s, stroke 0.2s;
}

/* Background lines styling */
.background path {
    fill: none;
    stroke: #eaeaea;
    stroke-width: 0.5px;
    stroke-linejoin: round;
    opacity: 0.1;
}

/* Highlighted path styling */
.foreground path:hover,
.foreground path.highlighted {
    stroke: #e74c3c;
    stroke-width: 2.5px;
    opacity: 0.9;
    mix-blend-mode: normal; /* override blend mode on hover */
    filter: drop-shadow(0 0 2px rgba(231, 76, 60, 0.3));
}

/* Visual feedback for dragging */
.drag-handle {
    cursor: move;
    fill: #777;
    font-size: 12px;
}

.drag-handle:hover {
    fill: #333;
}

/* Improve tooltip appearance */
.d3-tooltip {
    max-width: 200px;
    background: rgba(45, 62, 80, 0.95);
    color: #ecf0f1;
    border: none;
    border-radius: 5px;
    padding: 12px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.2);
}

.d3-tooltip strong {
    color: #2ecc71;
    display: block;
    margin-bottom: 6px;
    font-size: 13px;
}

.dimension .axis text {
    font-size: 0.8em;
    fill: #444;
    text-anchor: start;
}

.dimension .axis path,
.dimension .axis line {
    stroke: #999;
    stroke-width: 1px;
}

.dimension .axis text.label {
    font-weight: bold;
}

.foreground path {
    transition: stroke 0.2s ease, stroke-width 0.2s ease, opacity 0.2s ease;
}

.d3-tooltip {
    position: absolute;
    padding: 10px;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #ddd;
    border-radius: 5px;
    pointer-events: none;
    font-size: 12px;
    line-height: 1.4;
    box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    z-index: 1000;
    color: #333;
}

/* Responsive adjustments */
/* For smaller screens, scrolling might become necessary if content can't be shrunk further.
   The current media queries change to a single column layout.
   To strictly prevent scrolling even on smaller screens, the row heights would
   need to be more carefully managed, perhaps using fr units or viewport units,
   and chart complexity might need to be reduced.
   The request was for "standard screen", so these are less critical for that specific request.
*/
@media (max-width: 850px) {
    body {
        height: auto; /* Allow scrolling on smaller devices if content overflows */
        min-height: 100vh;
        overflow-y: auto; /* Explicitly allow vertical scroll */
    }
    .dashboard-container {
        grid-template-columns: 1fr;
        /* This could cause scrolling if 4 * 350px + header + padding > viewport height */
        grid-template-rows: repeat(4, minmax(350px, auto));
        overflow: visible; /* Allow container to scroll if its content (panes) overflows */
    }
    .dashboard-header h1 { font-size: 1.5em; }
    .pane-title { font-size: 1.1em; }
    .pane-header { flex-direction: column; align-items: flex-start;}
    .filter-container { margin-top: 10px; }
}

@media (max-width: 480px) {
    .dashboard-header { padding: 10px 15px; }
    .dashboard-header h1 { font-size: 1.3em; }
    .dashboard-container {
        padding: 15px;
        gap: 15px;
        grid-template-rows: repeat(4, minmax(300px, auto)); /* Adjust min height for very small screens */
    }
    .dashboard-pane { padding: 15px; }
    .pane-title { font-size: 1em; }
    .filter-container select, .filter-container label { font-size: 0.8em;}
}

/* Adding styles for the PCP mode toggle button */
.pcp-controls {
    display: flex;
    align-items: center;
}

.mode-toggle {
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 5px 10px;
    font-size: 0.85em;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s;
    display: flex;
    align-items: center;
    font-weight: 500;
}

.mode-toggle:hover {
    background-color: #2980b9;
    transform: translateY(-1px);
}

.mode-toggle.rearrange-mode {
    background-color: #e74c3c;
}

.mode-toggle.rearrange-mode:hover {
    background-color: #c0392b;
}

.mode-text {
    margin-left: 5px;
}

/* style for when drag mode is active */
.dimension.drag-enabled path,
.dimension.drag-enabled line {
    cursor: grab;
}

.dimension.drag-enabled:active path,
.dimension.drag-enabled:active line {
    cursor: grabbing;
}

/* style for disabled brushes */
.brush-disabled rect.selection {
    display: none;
}

.brush-disabled .handle {
    display: none;
}

/* tooltip enhancements */
.d3-tooltip {
    min-width: 160px;
}

.d3-tooltip:after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -10px;
    border-width: 10px;
    border-style: solid;
    border-color: rgba(45, 62, 80, 0.95) transparent transparent transparent;
}

/* responsive layout adjustments */
@media (max-width: 850px) {
    .pane-header {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .pcp-controls {
        margin-top: 10px;
    }
}